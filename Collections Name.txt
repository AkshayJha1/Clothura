Payment Gateway
Redis 
Docker

DOCKER 

Question : 

I made a full a stack project in which i have 2 folders frontend and backend . In frontend i have folders named node_modules , public , src ,and some files like .gitignore,index.js,package , package.json,vite.config and etc in src folders there too i have lots of folder and files same in backend i have node_module and other folder and files 
in frontend i have dependeces "bootstrap-dark-5": "^1.1.3",
    "react": "^18.3.1",
    "react-bootstrap": "^2.10.7",
    "react-dom": "^18.3.1",
    "react-router-dom": "^7.1.1",
    "react-toastify": "^11.0.2"
with main.js in my src the entry point and for my backend 
my backend folde has dependencies "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.9.2",
    "nodemailer": "^6.9.16",
    "otp-generator": "^4.0.1",
    "zod": "^3.24.1"
and server.js is my entry point my backend server runs on port 5000 and frontend on 5173 
by see this what should be my docker file code ?


















<script src="https://www.paypal.com/sdk/js?client-id=your_sandbox_client_id&currency=INR"></script>
import React, { useState } from "react";

const Payment = () => {
    const [amount, setAmount] = useState("1000");

    const createOrder = async () => {
        const response = await fetch("http://localhost:5000/create-order", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ amount }),
        });

        const orderData = await response.json();
        return orderData.id;  // Return the order ID
    };

    const captureOrder = async (data, actions) => {
        const captureResponse = await fetch("http://localhost:5000/capture-order", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ orderId: data.orderID }),
        });

        const captureData = await captureResponse.json();
        if (captureData.status === "COMPLETED") {
            alert("Payment Successful!");
        }
    };

    return (
        <div>
            <h2>Pay with PayPal</h2>
            <input
                type="number"
                value={amount}
                onChange={(e) => setAmount(e.target.value)}
                placeholder="Enter amount"
            />
            <div id="paypal-button-container"></div>

            <script>
                {window.paypal && window.paypal.Buttons({
                    createOrder: createOrder,
                    onApprove: captureOrder,
                }).render("#paypal-button-container")}
            </script>
        </div>
    );
};

export default Payment;
import React from "react";
import Payment from "./Payment";

const App = () => {
    return (
        <div>
            <h1>Clothaura - PayPal Payment Integration</h1>
            <Payment />
        </div>
    );

export default App;
